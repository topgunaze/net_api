一 线程

1 int  pthread_create(pthread_t  *restrict
       thread, const  pthread_attr_t  *restrict
       attr, void  *(*start_routine)(void*),
       void *restrict arg);


  thread : 创建新线程id;
  attr   : 线程的属性, NULL代表默认线程属性；
  start_routine : 线程函数；
  arg    : 传入到线程的实参；

2 int pthread_join(pthread_t thread,  void
       **value_ptr);
  thread    : 要等待的线程id；
  value_ptr : 线程的退出指针；

  返回0执行成功；
       错误编号；


  char *strerror(int errnum);

  错误码转换为字符串

3 pthread_t pthread_self(void);
  获取调用线程的id;


4 void pthread_cleanup_pop(int execute);
  弹出注册函数，如果execute == 0 不执行函数
  弹出注册函数，如果execute != 0 执行函数

  void   pthread_cleanup_push(void  (*rou-
       tine)(void*), void *arg);

  void pthread_exit(void *value_ptr);
  执行被push注册过的函数；
	使线程退出；
  
  被push注册的函数，一般是实现程序的收尾工作；

二 线程同步
  
 1 同一个资源，多个线程访问，同一时刻，
   只有一个线程可以访问，其它的线程必须等待；

 2 互斥量

   int  pthread_mutex_lock(pthread_mutex_t
       *mutex);

   int  pthread_mutex_unlock(pthread_mutex_t
       *mutex);

   pthread_mutex_destroy(pthread_mutex_t
       *mutex);
   int   pthread_mutex_init(pthread_mutex_t
       *restrict mutex,
                  const     pthread_mutexattr_t
       *restrict attr);

 3 课堂练习：修改文件（t.txt）的数值，初值0, 
   创建100个子线程，每个子线程修改现有数值，
   使其增加1，100个子线程，总共修改100此，
   结果为100，用互斥量完成，主线程只创建并等
   待子线程。


 4 实例 ： 两个子进程分别打印
   (0号字进程）奇（1号子进程）偶数（0 ~ 19）
   必须安大小顺序输出；


 5 课堂练习：四个子进程线程， 分别打印a、b、c、d，
   打印的结果为：abcdabcdabcd ...

 6 死锁
   加锁的次数多于解锁，
   或者两次加锁连续出现，中间没有解锁操作,
   使多个线程处于等待中；

 7 课后练习：四个子线程判断打印20000～20200之间
   的所有素数，
   判断不能重复，不能遗漏； 

   思路：
   主线程发数值， 等待子线程领取数值，
   领取后再发新的数值，发送完所有数值，
   发送退出条件（0）
   后等待子线程退出；
   
   子线程领数值（20020 －> －1），
   领导数据为0就退出；


三 条件变量
  
  1 pthread_cond_t 
    条件变量一般和互斥量搭配出现；

  2  pthread_cond_wait(pthread_cond_t *restrict cond,
              pthread_mutex_t *restrict mutex);

   使一个互斥量解锁,
   使调用线程进入等待状态，
   被唤醒的时候，需要在返回前加锁；

  3 int pthread_cond_broadcast(pthread_cond_t *cond);
		依次唤醒所有和cond相关的休眠；
    int pthread_cond_signal(pthread_cond_t  *cond);
		随机唤醒一个和cond相关的休眠；

    唤醒进入休眠的线程（和cond相关的休眠）；
    

四 课堂练习：修改abcd.c 使用条件变量


五 互斥量的应用：

   1 互斥量实现信号量
     信号量是一个整数，和资源关联。 

   2 打印20000 ～ 20200 之间的素数，
     打印素数的子线程数同一时刻最多为4，
     总共子线程数量为201；

七 课后练习

  1 线程间管道通讯
    实现函数：
    pipe_init()   队列初始化；
    pipe_read()   出队列(唤起)，无数据，挂起等待；
    pipe_write()  入队列(唤起)，队列满，挂起等待；
    


		进程管道间通讯：
    pipe()
    //fork()
    //close
    read()
		write()
