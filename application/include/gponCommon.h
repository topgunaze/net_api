/**************************************************************
 * 文件名称:  gtfCommon.h
 * 作           者:  keith.gong
 * 日           期:  2015.12.16
 * 文件描述:  
 * 版           本:  V1.00
 * 修改历史:  
 *     <修改者>   <时间>    <版本 >   <描述>
**************************************************************/


#ifndef __GTF_COMMON_H__
#define __GTF_COMMON_H__

#include "sys_debug.h"

typedef enum
{
    ONUCFG_RESULT_INIT,
    ONUCFG_RESULT_SUCCESS,
    ONUCFG_RESULT_FAILED,
    ONUCFG_RESULT_CONFIGING,
}ONUCFG_RESULT_DTE;


typedef enum
{
    GTF_RTN_OK,
    GTF_RTN_ERROR,

    /* 通用错误*/
    GTF_RTN_ERROR_MALLOC,              /* 内存不足*/
    GTF_RTN_ERROR_INVALID_PARAM,       /* 参数错误*/
    GTF_RTN_ERROR_NOT_SUPPORT,
    GTF_RTN_ERROR_TIMEOUT,
    GTF_RTN_CONFIG_REPEAT,
    GTF_RTN_CONFIG_CONFLICT,
    GTF_RTN_CONFIG_SYNC_CONFLICT,
    GTF_RTN_ERROR_OMCI_PROCESS_FAILED,
    
    /* 模板存在性错误*/
    GTF_RTN_DBA_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_DBA_PROFILE_NOT_EXIST,         /* 模板不存在 10*/
    GTF_RTN_DBA_PROFILE_BOUND,
    GTF_RTN_DBA_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/
    
    GTF_RTN_SRV_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_SRV_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_SRV_PROFILE_BOUND,
    GTF_RTN_SRV_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/
    GTF_RTN_SRV_PROFILE_USED_AUTOAUTH,
    
    GTF_RTN_LINE_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_LINE_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_LINE_PROFILE_BOUND,             //20
    GTF_RTN_LINE_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/
    GTF_RTN_LINE_PROFILE_USED_AUTOAUTH,

    GTF_RTN_SLA_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_SLA_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_SLA_PROFILE_BOUND,
    GTF_RTN_SLA_PROFILE_NOT_BOUND,
    GTF_RTN_SLA_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/

    GTF_RTN_ALARM_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_ALARM_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_ALARM_PROFILE_BOUND,             //30
    GTF_RTN_ALARM_PROFILE_NOT_BOUND,
    GTF_RTN_ALARM_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/    

    GTF_RTN_OPTICAL_ALARM_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_OPTICAL_ALARM_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_OPTICAL_ALARM_PROFILE_BOUND,
    GTF_RTN_OPTICAL_ALARM_PROFILE_NOT_BOUND,
    GTF_RTN_OPTICAL_ALARM_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/  

    GTF_RTN_CLASSIFICATION_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_CLASSIFICATION_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_CLASSIFICATION_PROFILE_BOUND,             //40
    GTF_RTN_CLASSIFICATION_PROFILE_NOT_BOUND,
    GTF_RTN_CLASSIFICATION_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/

    GTF_RTN_SIPAGENT_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_SIPAGENT_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_SIPAGENT_PROFILE_BOUND,
    GTF_RTN_SIPAGENT_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/

    GTF_RTN_POTS_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_POTS_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_POTS_PROFILE_BOUND,
    GTF_RTN_POTS_PROFILE_TABLE_FULL,        /* 模板数量达到上限 50*/

    GTF_RTN_DIGITMAP_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_DIGITMAP_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_DIGITMAP_PROFILE_BOUND,
    GTF_RTN_DIGITMAP_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/

    GTF_RTN_SIPRIGHT_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_SIPRIGHT_PROFILE_NOT_EXIST,         /* 模板不存在*/
    GTF_RTN_SIPRIGHT_PROFILE_BOUND,
    GTF_RTN_SIPRIGHT_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/

    GTF_RTN_TRAFFIC_PROFILE_EXIST,             /* 模板已存在*/
    GTF_RTN_TRAFFIC_PROFILE_NOT_EXIST,         /* 模板不存在 60*/
    GTF_RTN_TRAFFIC_PROFILE_BOUND,
    GTF_RTN_TRAFFIC_PROFILE_NOT_BOUND,
    GTF_RTN_TRAFFIC_PROFILE_TABLE_FULL,        /* 模板数量达到上限*/

    /* 模板绑定错误*/
    GTF_RTN_ERROR_ONU_BOUND,
    GTF_RTN_ERROR_ONU_NOT_BOUND,

    /* ONU 状态*/
    GTF_RTN_ONU_NOT_EXIST,//66
    GTF_RTN_ONU_NOT_ONLINE,
    GTF_RTN_ONU_IDLE,
    GTF_RTN_ONU_BUSY,
    GTF_RTN_ONU_MIB_SYNCED,//70
    GTF_RTN_ONU_MIB_NOT_SYNCED,

    /* 授权状态错误*/
    GTF_RTN_ERROR_ONURA_ONU_HAS_NOT_REGED,
    GTF_RTN_ERROR_ONURA_ONU_ALREADY_AUTHED,
    GTF_RTN_ERROR_ONURA_AUTH_LIST_TABLE_FULL,
    GTF_RTN_ERROR_ONURA_AUTH_ENTRY_NOT_EXIST,
    GTF_RTN_ERROR_ONURA_AUTH_ENTRY_EXIST,
    GTF_RTN_ERROR_ONURA_AUTH_ENTRY_CONFLLIC,
    GTF_RTN_ERROR_ONURA_AUTH_NO_UNUSED_AUTHID,
    
    /*注册状态错误*/
    GTF_RTN_ONURA_ERROR_REG_LIST_TABLE_FULL,
    GTF_RTN_ONURA_ERROR_REG_ENTRY_NOT_EXIST,//80
    GTF_RTN_ONURA_ERROR_REG_ENTRY_EXIST, 
    GTF_RTN_ONURA_ERROR_REG_ENTRY_CONFLLIC,
    GTF_RTN_ONURA_ERROR_REG_ENTRY_ID_USED,
    GTF_RTN_ONURA_ERROR_REG_ENTRY_SN_REGED,

    /*注册状态错误*/
    GTF_RTN_ONURA_ERROR_BLACKLIST_TABLE_FULL,
    GTF_RTN_ONURA_ERROR_BLACKLIST_ENTRY_NOT_EXIST,
    GTF_RTN_ONURA_ERROR_BLACKLIST_ENTRY_CONFLLIC,
    
    /* 物理状态配置错误*/
    GTF_RTN_ONURA_ERROR_SILENCE_FAILED,
    GTF_RTN_ONURA_ERROR_DESILENCE_FAILED,
    GTF_RTN_ONURA_ERROR_OFFLINE_FAILED,//90

    GTF_RTN_NO_ENOUGHT_BW,             /* 带宽溢出*/

    GTF_RTN_ERROR_ETH_PORT_NOT_EXIST,
    GTF_RTN_ERROR_ETH_PORT_NOT_ADD_TO_THE_VLAN,

	GTF_RTN_ERROR_POTS_PORT_NOT_EXIST,
    GTF_RTN_ERROR_POTS_PORT_USER_EXIST,
    GTF_RTN_ERROR_POTS_PORT_USER_NOT_EXIST,

    GTF_RTN_ONU_IPCONFIG_NOT_CONFIGURED,

    GTF_RTN_ONU_UPGRADE_LOAD_START,
    GTF_RTN_ONU_UPGRADE_LOAD_STOP,
    GTF_RTN_ONU_UPGRADE_LOADING,//100
    GTF_RTN_ONU_UPGRADE_NOT_SELECT,
    GTF_RTN_ONU_UPGRADE_SELECT,
    GTF_RTN_ONU_UPGRADE_DOWNLOAD_FAILED,
    GTF_RTN_ONU_UPGRADE_IMAGE_DOWNLOADING,    
    GTF_RTN_ONU_UPGRADE_OPEN_FAILED,
    GTF_RTN_ONU_UPGRADE_IMAGE_SIZE_ERROR,
    GTF_RTN_ONU_UPGRADE_IMAGE_READED,

    GTF_RTN_ONU_AUTOAUTH_MODE_CONFLICT,
    GTF_RTN_ONU_AUTOAUTH_RULE_ENTRY_EXIST,
    GTF_RTN_ONU_AUTOAUTH_RULE_CONFLICT,//110
    GTF_RTN_ONU_AUTOAUTH_RULE_FULL,
    
    ETF_RTN_TF_ACL_PROFILE_ID_INVALID,
    ETF_RTN_TF_ACL_PROFILE_IN_USE,
    ETF_RTN_TF_ACL_INVALID,
    ETF_RTN_TF_ACL_BIND_FULL,
    ETF_RTN_TF_ACL_BIND_AGAIN,
    ETF_RTN_TF_ACL_BIND_NOT_EXIST,
    ETF_RTN_TF_ACL_BIND_FAILED,

    GTF_RTN_LINE_PROFILE_BOUND_BY_AUTOAUTH,
    GTF_RTN_SRV_PROFILE_BOUND_BY_AUTOAUTH,//120

    PROFILE_RTN_MAX,
}GTF_RTN_CODE;


typedef struct 
{
    const char          *pMsg;
    const char          *pFormat;
}
GTF_ERROR_MSG;

typedef struct 
{
    const char          *pMsg;
    const char          *pFormat;
}
GTF_ALARM_MSG;

const char *
tf_gtf_errorcode_print(
                GTF_RTN_CODE ret);

const char *
tf_rc_simple_print(
                unsigned int ret);             

#endif /* __GTF_COMMON_H__ */


